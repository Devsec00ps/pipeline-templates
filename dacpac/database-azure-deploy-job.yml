parameters:
  azureSubscription: '' # Required
  authenticationType: 'server' # Options: server, aadAuthenticationPassword, aadAuthenticationIntegrated, connectionString, servicePrincipal
  serverName: '' # Required when authenticationType == Server || AuthenticationType == AadAuthenticationPassword || AuthenticationType == AadAuthenticationIntegrated || AuthenticationType == servicePrincipal
  databaseName: '' # Required when authenticationType == Server || AuthenticationType == AadAuthenticationPassword || AuthenticationType == AadAuthenticationIntegrated || AuthenticationType == servicePrincipal
  sqlUsername: '' # Required when authenticationType == Server
  sqlPassword: '' # Required when authenticationType == Server
  aadSqlUsername: '' # Required when authenticationType == AadAuthenticationPassword
  aadSqlPassword: '' # Required when authenticationType == AadAuthenticationPassword
  connectionString: '' # Required when authenticationType == ConnectionString
  publishProfile: '' # Optional
  additionalArguments: '' # Optional
  runDeploy: true    # Run deploy or not - switch to false if you want to use a verify/approve sql changes stage
  environment: ''
  pool: 
    vmImage: 'windows-latest'

jobs:
- deployment: deploy_db
  displayName: Deploy Database
  workspace:
    clean: all

  pool: ${{ parameters.pool }}
  environment: '${{ parameters.environment }}'

  strategy:
    runOnce:
      deploy:
        steps:

        # get .dacpac file path
        - powershell: |
            Get-ChildItem "$(Pipeline.Workspace)" -Recurse -Filter *.dacpac | 
            Foreach-Object {
                Write-host $($_.FullName)
                Write-Host "##vso[task.setvariable variable=dacpacFilePath;]$($_.FullName)"
            }
          displayName: dacpac file path

        # Generate schema change script - compare dacpac to db
        - task: SqlAzureDacpacDeployment@1
          displayName: Generate schema change script
          inputs:
            azureSubscription: 'Resource Manager - Tailspin - Space Game'
            authenticationType: ${{ parameters.authenticationType }} # Options: server, aadAuthenticationPassword, aadAuthenticationIntegrated, connectionString, servicePrincipal
            serverName: ${{ parameters.serverName }} # Required when authenticationType == Server || AuthenticationType == AadAuthenticationPassword || AuthenticationType == AadAuthenticationIntegrated || AuthenticationType == servicePrincipal
            databaseName: ${{ parameters.databaseName }} # Required when authenticationType == Server || AuthenticationType == AadAuthenticationPassword || AuthenticationType == AadAuthenticationIntegrated || AuthenticationType == servicePrincipal
            sqlUsername: ${{ parameters.sqlUsername }} # Required when authenticationType == Server
            sqlPassword: ${{ parameters.sqlPassword }} # Required when authenticationType == Server
            aadSqlUsername: ${{ parameters.aadSqlUsername }} # Required when authenticationType == AadAuthenticationPassword
            aadSqlPassword: ${{ parameters.aadSqlPassword }} # Required when authenticationType == AadAuthenticationPassword
            connectionString: ${{ parameters.connectionString }} # Required when authenticationType == ConnectionString
            deployType: 'DacpacTask'
            deploymentAction: 'Script'
            dacpacFile: '$(dacpacFilePath)'
            ipDetectionMethod: 'AutoDetect'
        
        # Generate schema change script - write to log
        - task: PowerShell@2
          displayName: Show Auto Generated SQL Script
          inputs:
            targetType: 'inline'
            script: | 
              Write-Host "Auto Generated SQL Update Script:"
              Get-Content d:\a\1\s\GeneratedOutputFiles\${{ parameters.databaseName }}_Script.sql | foreach {Write-Output $_}

        # Run the deploy - make sure runDeploy is true
        - task: SqlAzureDacpacDeployment@1
          condition: and(succeeded(), eq(variables['runDeploy'], 'true'))
          inputs:
            azureSubscription: ${{ parameters.azureSubscription }}
            authenticationType: ${{ parameters.authenticationType }} # Options: server, aadAuthenticationPassword, aadAuthenticationIntegrated, connectionString, servicePrincipal
            serverName: ${{ parameters.serverName }} # Required when authenticationType == Server || AuthenticationType == AadAuthenticationPassword || AuthenticationType == AadAuthenticationIntegrated || AuthenticationType == servicePrincipal
            databaseName: ${{ parameters.databaseName }} # Required when authenticationType == Server || AuthenticationType == AadAuthenticationPassword || AuthenticationType == AadAuthenticationIntegrated || AuthenticationType == servicePrincipal
            sqlUsername: ${{ parameters.sqlUsername }} # Required when authenticationType == Server
            sqlPassword: ${{ parameters.sqlPassword }} # Required when authenticationType == Server
            aadSqlUsername: ${{ parameters.aadSqlUsername }} # Required when authenticationType == AadAuthenticationPassword
            aadSqlPassword: ${{ parameters.aadSqlPassword }} # Required when authenticationType == AadAuthenticationPassword
            connectionString: ${{ parameters.connectionString }} # Required when authenticationType == ConnectionString
            deployType: 'DacpacTask'
            DeploymentAction: 'Publish'
            DacpacFile: '$(dacpacFilePath)'
            PublishProfile: '${{ parameters.publishProfile }}'
            AdditionalArguments: '${{ parameters.additionalArguments }}'
            IpDetectionMethod: 'AutoDetect'